<!DOCTYPE html>
<html>
<head>
    <meta charset="UTF-8">
    <title>{% block title %}ShareAlbum{% endblock %}</title>
{#    <link rel="icon" href="data:image/svg+xml,<svg xmlns=%22http://www.w3.org/2000/svg%22 viewBox=%220 0 128 128%22><text y=%221.2em%22 font-size=%2296%22>⚫️</text><text y=%221.3em%22 x=%220.2em%22 font-size=%2276%22 fill=%22%23fff%22>sf</text></svg>">#}

    <link rel="apple-touch-icon" sizes="180x180" href="/img/favicon/apple-touch-icon.png">
    <link rel="icon" type="image/png" sizes="32x32" href="/img/favicon/favicon-32x32.png">
    <link rel="icon" type="image/png" sizes="16x16" href="/img/favicon/favicon-16x16.png">
    <link rel="manifest" href="/img/favicon/site.webmanifest">
    <link rel="mask-icon" href="/img/favicon/safari-pinned-tab.svg" color="#5bbad5">
    <meta name="msapplication-TileColor" content="#00aba9">
    <meta name="theme-color" content="#ffffff">

    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.12.1/css/all.min.css">
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    {% block stylesheets %}
        <link rel="stylesheet" href="{{ asset('styles/reset.css') }}">
        <link rel="stylesheet" href="{{ asset('styles/headerHome.css') }}">
        <link rel="stylesheet" href="{{ asset('styles/footer.css') }}">
    {% endblock %}

</head>
<body class="body">
{% block header %}
    <header class="headerNav">
        <nav class="navP">
            <div class="menu-icon" id="menu-icon">
                <span class="bar"></span>
                <span class="bar"></span>
                <span class="bar"></span>
            </div>
            <div style="height: 80px; display:flex; justify-content: center; align-items: center; width: fit-content;">
                <a href="{{ path('app_home') }}" id="a logo-link" class="margen-izquierdo logo"><img src="/img/logo.svg" class="img" style="filter: invert(1);" alt="Logo"></a>
                <ul class="nav-links">
                    <li class="li contenedor">
                        <a href="{{ path('app_home') }}" id="inicio-link" class="a margen-izquierdo">Inicio</a>
                    </li>
                </ul>
            </div>
            <div class="dropdown">
                <button type="button">
                    <img src="/img/usuario.png" id="options" class="img margen-derecho" alt="Descripción de la imagen">
                </button>
                <div class="dropdown-content">
                    <a href="#modalPerfil" class="a">Perfil</a>
                    <a href="#" class="a" id="logout" onclick="logout()">Logout</a>
                </div>
            </div>
        </nav>
    </header>
{% endblock header %}

{% block body %}

    <div id="loading-screen">
        <div class="spinner"></div>
    </div>

    <!-- Modal Datos Perfil -->
    <div class="modalPerfil" id="modalPerfil">
        <div class="modalPerfil-content">
            <span class="cerrarModal" id="CerrarPerfil">&times;</span>
            <div class="datos">
                <h1 class="h1"><i class="fa-solid fa-user"></i>&nbsp; Perfil</h1>
                <!-- Primer formulario -->
                <form method="post" id="formPrincipal">
                    {{ form_errors(formUserData) }}
                    {{ form_start(formUserData) }}
                    <div class="camposPerfil">
                        {{ form_widget(formUserData.name, {'attr': {'class': 'padding', 'placeholder': 'Nombre'}}) }}
                        {{ form_widget(formUserData.surnames, {'attr': {'class': 'padding', 'placeholder': 'Apellidos'}}) }}
                        {{ form_widget(formUserData.email, {'attr': {'class': 'padding', 'placeholder': 'Email'}}) }}
                        {{ form_widget(formUserData.dni, {'attr': {'class': 'padding', 'placeholder': 'DNI'}}) }}
                        {{ form_widget(formUserData.telephone, {'attr': {'class': 'padding', 'placeholder': 'Telefono'}}) }}
                    </div>

                    {{ form_end(formUserData)}}
                </form>
                <!-- Segundo formulario -->
                <button id="mostrar" style="font-weight: bold; font-size: medium; margin-top: 20px;">Cambiar contraseña</button>
                <div class="camposPassword">
                    <form method="post" id="formPassword">
                        {{ form_errors(formNewPassword) }}
                        {{ form_start(formNewPassword) }}
                        <div class="camposPasswordPerfil">
                            {{ form_widget(formNewPassword.password.first, {'attr': {'class': 'padding campoPasswordPerfil', 'placeholder': 'Nueva contraseña'}}) }}
                            {{ form_widget(formNewPassword.password.second, {'attr': {'class': 'padding campoPasswordPerfil', 'placeholder': 'Repite la contraseña'}}) }}
                        </div>
                        <div class="campoPasword">
                            <!-- Botón para enviar el segundo formulario -->
                            <button type="submit" form="formPassword" class="submitPerfil paddingButton" id="sendModal3">Cambiar Contraseña</button>
                        </div>
                        {{ form_end(formNewPassword)}}
                    </form>
                </div>
                <div class="botonesPerfil">
                    <button id="CerrarPerfilButton" class="closePerfil paddingButton" style="margin-bottom: 10px;">Atrás</button>
                    <button type="submit" form="formPrincipal" class="submitPerfil paddingButton" style="margin-bottom: 10px;">Actualizar</button>
                </div>
            </div>
        </div>
    </div>

    {% block javascripts %}
        <script src="{{ asset('js/headerHome.js') }}"></script>

        <script>
            document.addEventListener('DOMContentLoaded', function() {
                const form = document.getElementById('formPrincipal');

                form.addEventListener('submit', function(event) {
                    event.preventDefault();

                    const name = document.getElementById('user_data_name');
                    const surnames = document.getElementById('user_data_surnames');
                    const email = document.getElementById('user_data_email');
                    const dni = document.getElementById('user_data_dni');
                    const telephone = document.getElementById('user_data_telephone');

                    let isValid = true;
                    let errorMessages = [];

                    // Validar que todos los campos estén llenos
                    [name, surnames, email, dni, telephone].forEach(field => {
                        if (field.value.trim() === '') {
                            isValid = false;
                            errorMessages.push(`El campo ${field.placeholder} es obligatorio`);
                        }
                    });

                    // Validar formato de email
                    const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
                    if (!emailRegex.test(email.value)) {
                        isValid = false;
                        errorMessages.push('Ingrese un email válido');
                    }

                    // Validar teléfono (9 dígitos numéricos)
                    const phoneRegex = /^\d{9}$/;
                    if (!phoneRegex.test(telephone.value)) {
                        isValid = false;
                        errorMessages.push('El teléfono debe tener 9 dígitos numéricos');
                    }

                    // Validar DNI español
                    const dniRegex = /^\d{8}[A-HJ-NP-TV-Z]$/;
                    if (!dniRegex.test(dni.value)) {
                        isValid = false;
                        errorMessages.push('Ingrese un DNI válido (8 números y una letra)');
                    } else {
                        const dniLetters = "TRWAGMYFPDXBNJZSQVHLCKE";
                        const letter = dni.value.charAt(8).toUpperCase();
                        const number = parseInt(dni.value.substr(0, 8));
                        if (letter !== dniLetters[number % 23]) {
                            isValid = false;
                            errorMessages.push('La letra del DNI no es correcta');
                        }
                    }

                    // Mostrar errores o enviar el formulario
                    if (!isValid) {
                        showErrors(errorMessages);
                    } else {
                        removeErrors();
                        document.getElementById("modalPerfil").style.display = "none";
                        Swal.fire({
                            title: "Éxito",
                            text: "Datos personales actualizados",
                            icon: "success",
                            showConfirmButton: false,
                            timer: 2000
                        }).then(() => {
                            form.submit();
                        });
                    }
                });

                function showErrors(messages) {
                    removeErrors();
                    const errorContainer = document.createElement('div');
                    errorContainer.className = 'error-container';
                    errorContainer.innerHTML = messages.map(msg => `<p class="error-message" style="color: red; margin-top: 20px;">${msg}</p>`).join('');
                    form.appendChild(errorContainer);
                }

                function removeErrors() {
                    const errorContainer = form.querySelector('.error-container');
                    if (errorContainer) {
                        errorContainer.remove();
                    }
                }
            });

            document.addEventListener('DOMContentLoaded', function() {
                const formPassword = document.getElementById('formPassword');

                if (formPassword) {
                    formPassword.addEventListener('submit', function(event) {
                        event.preventDefault();

                        const password1 = document.getElementById('new_password_password_first');
                        const password2 = document.getElementById('new_password_password_second');

                        let isValid = true;
                        let errorMessages = [];

                        // Verificar que los campos de contraseña existen
                        if (!password1 || !password2) {
                            console.error('No se encontraron los campos de contraseña');
                            return;
                        }

                        // Criterios de seguridad para la contraseña
                        const passwordCriteria = /^(?=.*[a-z])(?=.*[A-Z])(?=.*\d).{8,}$/;

                        // Validar que ambas contraseñas sean iguales
                        if (password1.value !== password2.value) {
                            isValid = false;
                            errorMessages.push('Las contraseñas no coinciden.');
                        }

                        // Validar que la contraseña cumpla con los criterios de seguridad
                        if (!passwordCriteria.test(password1.value)) {
                            isValid = false;
                            errorMessages.push('La contraseña debe tener al menos 8 caracteres, incluyendo una letra mayúscula, una letra minúscula y un número.');
                        }

                        // Mostrar errores o enviar el formulario
                        if (!isValid) {
                            showErrors(errorMessages, formPassword);
                        } else {
                            removeErrors(formPassword);
                            document.getElementById("modalPerfil").style.display = "none";
                            Swal.fire({
                                title: "Éxito",
                                text: "Contraseña actualizada",
                                icon: "success",
                                showConfirmButton: false,
                                timer: 2000
                            }).then(() => {
                                formPassword.submit();
                            });
                        }
                    });
                } else {
                    console.error('El formulario de cambio de contraseña no se encontró');
                }

                function showErrors(messages, form) {
                    removeErrors(form);
                    const errorContainer = document.createElement('div');
                    errorContainer.className = 'error-container';
                    errorContainer.innerHTML = messages.map(msg => `<p class="error-message" style="color: red; margin-top: 20px;">${msg}</p>`).join('');
                    form.appendChild(errorContainer);
                }

                function removeErrors(form) {
                    const errorContainer = form.querySelector('.error-container');
                    if (errorContainer) {
                        errorContainer.remove();
                    }
                }
            });
        </script>
    {% endblock %}
{% endblock %}

{% block footer %}
    <footer>
        <p>
            Aplicación: <i>ShareAlbum</i> -
            Creado por: <i> Moisés Moyano Cejudo</i>
        </p>
    </footer>
{% endblock footer %}
</body>
</html>

